geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed") +
geom_text(x = input$a, y = 250, label = "A", color = "#1f77b4") +
geom_text(x = input$b, y = 250, label = "B", color = "#d62728") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed") +
geom_text(x = input$a, y = 250, label = "A", color = "#1f77b4") +
geom_text(x = input$b, y = 250, label = "B", color = "#d62728") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed") +
geom_text(x = input$a, y = 200, label = "A", color = "#1f77b4") +
geom_text(x = input$b, y = 200, label = "B", color = "#d62728") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed") +
geom_text(x = input$a - 0.1, y = 200, label = "Party A", color = "#1f77b4") +
geom_text(x = input$b + 0.1, y = 200, label = " Party B", color = "#d62728") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed") +
geom_text(x = input$a - 0.02, y = 200, label = "Party A", color = "#1f77b4") +
geom_text(x = input$b + 0.02, y = 200, label = " Party B", color = "#d62728") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed") +
geom_text(x = input$a - 0.05, y = 200, label = "Party A", color = "#1f77b4") +
geom_text(x = input$b + 0.05, y = 200, label = " Party B", color = "#d62728") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed", linewidth = 1.2) +
geom_text(x = input$a - 0.05, y = 200, label = "Party A", color = "#1f77b4") +
geom_text(x = input$b + 0.05, y = 200, label = " Party B", color = "#d62728") +
geom_text(x = median_voter + 0.05, y = 200, label = "Median Voter", color = "darkgreen") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed", linewidth = 1.2) +
geom_text(x = input$a - 0.05, y = 200, label = "Party A", color = "#1f77b4") +
geom_text(x = input$b + 0.05, y = 200, label = " Party B", color = "#d62728") +
geom_text(x = median_voter + 0.08, y = 200, label = "Median Voter", color = "darkgreen") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed", linewidth = 1.2) +
geom_text(x = input$a - 0.05, y = 200, label = "Party A", color = "#1f77b4") +
geom_text(x = input$b + 0.05, y = 200, label = " Party B", color = "#d62728") +
geom_text(x = median_voter + 0.08, y = 200, label = "Median Voter", color = "darkgreen") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed", linewidth = 1.2) +
geom_text(x = input$a - 0.05, y = 200, label = "Party A", color = "#1f77b4") +
geom_text(x = input$b + 0.05, y = 200, label = " Party B", color = "#d62728") +
geom_text(x = median_voter + 0.08, y = 200, label = "Median Voter", color = "darkgreen") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
shiny::runApp()
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed", linewidth = 1.2) +
geom_text(x = input$a - 0.05, y = 200, label = "Party A", color = "#1f77b4") +
geom_text(x = input$b + 0.05, y = 200, label = " Party B", color = "#d62728") +
geom_text(x = median_voter + 0.08, y = 200, label = "Median Voter", color = "darkgreen") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
titlePanel("Party Competition in the Downsian Model"),
sidebarLayout(
sidebarPanel(
sliderInput("a", "Party A position", min = 0, max = 1, value = 0.2, step = 0.01),
sliderInput("b", "Party B position", min = 0, max = 1, value = 0.8, step = 0.01),
selectInput("dist", "Voter distribution", choices = c("Normal", "Bimodal", "Skewed"))
),
mainPanel(plotOutput("plot"))
)
)
server <- function(input, output) {
output$plot <- renderPlot({
n <- 5000
voters <- switch(input$dist,
"Normal" = rnorm(n, 0.5, 0.15),
"Bimodal" = c(rnorm(n/2, 0.35, 0.08), rnorm(n/2, 0.65, 0.08)),
"Skewed" = rbeta(n, 2, 5)
)
voters <- pmin(pmax(voters, 0), 1)
dA <- abs(voters - input$a)
dB <- abs(voters - input$b)
votesA <- sum(dA < dB)
votesB <- sum(dB < dA)
ties <- sum(dA == dB)
median_voter <- median(voters)
ggplot(data.frame(voters), aes(x = voters)) +
geom_histogram(bins = 60, fill = "grey80", colour = "white") +
geom_vline(xintercept = input$a, color = "#1f77b4", linewidth = 1.2) +
geom_vline(xintercept = input$b, color = "#d62728", linewidth = 1.2) +
geom_vline(xintercept = median_voter, color = "darkgreen", linetype = "dashed", linewidth = 1.2) +
geom_text(x = input$a - 0.05, y = 200, label = "Party A", color = "#1f77b4") +
geom_text(x = input$b + 0.05, y = 200, label = " Party B", color = "#d62728") +
geom_text(x = median_voter + 0.08, y = 200, label = "Median Voter", color = "darkgreen") +
labs(
title = sprintf("Vote share A: %.1f%% — B: %.1f%%",
100 * (votesA + 0.5 * ties)/n,
100 * (votesB + 0.5 * ties)/n),
x = "Policy space", y = "Number of voters"
) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
